type AnyObject = Record<any, any>;
/**
 * This is the real data received by the client
 */
export interface HandlerParams {
    body: AnyObject;
    query: AnyObject;
    headers: AnyObject;
    file: AnyObject;
    mid: AnyObject;
}
export interface Handler {
    setNext(handler: Handler): Handler;
    handle: (p: HandlerParams) => any;
    getNextHandler: () => Handler | undefined;
}
export declare abstract class AbstractHandler implements Handler {
    protected nextHandler: Handler | undefined;
    setNext(handler: Handler): Handler;
    handle(data: HandlerParams): Promise<any>;
    getNextHandler: () => Handler | undefined;
}
export declare class FirstHandler extends AbstractHandler {
}
export {};
//# sourceMappingURL=handler.d.ts.map