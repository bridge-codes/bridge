interface Error {
    name: string;
    status: number;
    data?: any;
}
export declare const isError: (object: any) => object is Error;
/**
 *
 * TO_COMPLETE
 *
 */
export declare const httpError: <Status extends 400 | 401 | 402 | 403 | 404 | 405 | 406 | 407 | 408 | 409 | 410 | 411 | 412 | 413 | 414 | 415 | 416 | 417 | 418 | 419 | 422 | 423 | 424 | 425 | 426 | 428 | 431 | 451 | 500 | 501 | 502 | 503 | 504 | 505 | 506 | 507 | 508 | 510 | 511, Name extends string, Data>(status: Status, name: Name, data?: Data | undefined) => {
    error: {
        name: Name;
        data?: any;
        status: Status;
    };
};
export * from './listener';
export * from './status';
//# sourceMappingURL=index.d.ts.map